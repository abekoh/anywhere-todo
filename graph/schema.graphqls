scalar Time

type Task {
    taskId: ID!
    taskLogId: ID!
    title: String!
    detail: String
    done: Boolean!
    deadline: Time
    subTasks: [SubTask!]!
}

type SubTask {
    subTaskId: ID!
    subTaskLogId: ID!
    title: String!
    detail: String
    done: Boolean!
    deadline: Time
}

type Query {
    tasks: [Task!]!
}

input NewTask {
    title: String!
    detail: String
    deadline: Time
}

input UpdatedTask {
    taskId: ID!
    title: String
    detail: String
    done: Boolean
    deadline: Time
}

input SyncTasks {
    newTasks: [NewTask!]!
    updatedTasks: [UpdatedTask!]!
}

type Mutation {
    createTask(input: NewTask!): Task!
    updateTask(input: UpdatedTask!): Task!
    syncTasks(input: SyncTasks!): [Task!]!
}
